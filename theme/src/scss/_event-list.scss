.pulumi-event-list-container {
    .scroll-container {
        width: 110px;

        button {
            width: 110px;

            i:hover {
                @apply text-black;
            }
        }

        @screen xl {
            @apply hidden;
        }
    }

    #event-list-filter-nav {
        @apply flex text-base py-2 p-0;

        list-style: none !important;

        @screen md {
            @apply text-base py-0;
        }

        overflow-x: scroll;
        // Don't show a scrollbar, because we have our own custom implementation with buttons.
        &::-webkit-scrollbar {
            display: none;
        }

        li {
            @apply flex-grow border-solid border-b-2 border-transparent mx-3;

            > a {
                @apply block py-2 px-4 font-normal text-lg text-center text-gray-700 no-underline;

                @screen md {
                    @apply py-4;
                }
            }

            &:hover {
                @apply border-gray-600;

                > a {
                    @apply text-black;
                }
            }
        }

        // On initial load without a target in the url, the upcoming tab should be active.
        li[data-filter-name="upcoming"] {
            @include gradient-border;

            > a {
                @apply font-semibold text-black;
            }
        }
    }

    pulumi-filter-select {
        @apply items-end pb-4;

        pulumi-filter-select-option-group {
            @apply font-display text-base;
    
            .toggle {
                @apply pl-2 pr-6 py-1 rounded bg-white border border-gray-300 transition-all;
    
                @screen md {
                    @apply w-32;
                }
    
                &:hover {
                    @apply text-black;
                    background-color: #e8e8ec;
                }
            }
    
            .options {
                @apply bg-white py-2 pl-1 pr-4 rounded shadow mt-1 border border-gray-300 leading-loose z-50;
    
                @screen md {
                    @apply pr-8;
                }
            }
    
            &:hover,
            &[expanded] {
                &::part(toggle) {
                    @apply text-black;
                }
    
                .toggle {
                    @apply text-black;
                    background-color: #e8e8ec;
                }
            }
        }
    }
    
}

@each $filter-name in "upcoming" "on-demand" "ai-answers"{
    ##{$filter-name}:target {
        @if $filter-name != "upcoming" {
            ~ .event-list-filter li[data-filter-name="upcoming"] {
                @apply flex-grow border-solid border-b-2 border-transparent;
                border-image-source: none;

                > a {
                    @apply font-normal text-gray-600;
                }

                &:hover {
                    @apply border-gray-600;

                    > a {
                        @apply text-black;
                    }
                }
            }
        }

        ~ .event-list-filter li[data-filter-name="#{$filter-name}"] {
            @include gradient-border;

            > a {
                @apply font-semibold text-black;
            }
        }

        // When the page is loaded without a hash in the URL (a selected filter) we load
        // all the elements in the list and mark the 'all' filter as active. Because in this
        // case all the elements are visible and are not rendered with a 'hidden' class, we need
        // to apply the 'hidden' class to all the elements in the list. Then we will apply the
        // 'block' class to the elements containing the selected filter.
        ~ ul li {
            @apply hidden;
        }

        ~ ul li[data-filters~="#{$filter-name}"] {
            @apply block;
        }
    }

    // Sort AI answers to the bottom of the list so they don't push dated events down the list.
    li[data-filters~="ai-answers"]  {
        @apply order-last;
    }
}

.event-list-item {
    article {
        height: 380px;
    }
}
