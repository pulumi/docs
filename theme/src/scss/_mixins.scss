@mixin transition($scope: all, $duration: 120ms, $fn: linear) {
    transition: $scope $duration $fn;
}

@mixin bg-gradient($from-color, $to-color, $radius, $center-x: 50%, $center-y: 50%) {
    background-image: radial-gradient($radius at $center-x $center-y, $from-color, $to-color);
}

// https://fontawesome.com/
@mixin fa-glyph($unicode, $collection: "Free") {
    font-family: "Font Awesome 5 #{$collection}";

    &:after {
        content: "#{$unicode}";
    }
}

@mixin gradient-border() {
    border-bottom: 2px solid;
    border-image-slice: 1;
    border-image-source: linear-gradient(90deg, #f7bf2a 0%, #f26e7e 18.23%, #be5188 38.02%, #8a3391 53.65%, #805ac3 74.48%, #7682f4 100%);
}

@mixin gradient-background() {
    background: linear-gradient(90deg, #be5188 0%, theme("colors.violet.600") 100%);
}

@mixin gradient-button {
    @apply relative text-white bg-violet-600 border-violet-600 border-2 rounded-full cursor-pointer z-auto;

    &:hover {
        @apply no-underline;
    }

    // The default behavior of this mixin, as with all buttons, is to transition between background colors --
    // but since CSS doesn't support transitioning between solids and gradients, we need to resort to a little
    // trickery. For elements that support it, we position a gradient-colored background behind the element's
    // solid background, and then on hover, hide the solid to reveal the gradient.
    &:not(input) {
        @apply bg-opacity-100 border-opacity-100;
        @include transition;

        &::before {
            @apply absolute rounded-full bg-opacity-100 border-opacity-100;
            @include gradient-background;
            border-image-width: 2px;
            content: "";
            top: -2px;
            left: -2px;
            width: calc(100% + 4px);
            height: calc(100% + 4px);
            z-index: -1;
        }

        &:hover {
            @apply bg-opacity-0 border-opacity-0;
        }
    }

    // For elements that don't support pseudoelements, just fall back to transitionless hovers.
    &:is(input) {
        @apply border-gray-100;

        &:hover {
            @include gradient-background;
        }
    }

    &:focus {
        @apply bg-blue-600 border-blue-600;
    }
}
