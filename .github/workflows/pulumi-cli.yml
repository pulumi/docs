env:
  GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}

name: cli docs build
on:
  repository_dispatch:
    types:
      - pulumi-cli
jobs:
  build-pulumi-cli-docs:
    runs-on: ubuntu-18.04
    steps:
      - name: set the pulumi version
        run: |
          echo "PULUMI_VERSION=${{ github.event.client_payload.ref }}" >> $GITHUB_ENV
      - name: checkout docs repo
        uses: actions/checkout@v2
        with:
          path: docs
      - name: checkout pulumi repo
        uses: actions/checkout@v2
        with:
          repository: pulumi/pulumi
          path: pulumi
          ref: v${{ github.event.client_payload.ref }}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
        with:
          pulumi-version: ${{ env.PULUMI_VERSION }}
      - name: Install go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Install Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.82.0'
          extended: true
      - name: Install node
        uses: actions/setup-node@v2-beta
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.pythonversion}}
      - name: Install Pipenv
        run:  pip3 install pipenv
      - name: Install dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{matrix.dotnetverson}}
      - run: make ensure ensure_tools
        working-directory: docs
      - name: run yarn install in nodejs sdk
        run: yarn install && yarn run tsc
        working-directory: pulumi/sdk/nodejs
      - name: run typedoc
        run: PKGS=pulumi NOBUILD=true ./scripts/run_typedoc.sh
        working-directory: docs
      - name: generate python docs
        run: ./scripts/generate_python_docs.sh "pulumi"
        working-directory: docs
      - name: generate markdown
        run: |
          pulumi gen-markdown ./content/docs/reference/cli
        working-directory: docs
      - name: Update latest version
        run: |
          echo -n "${{ env.PULUMI_VERSION }}" > ./static/latest-version
        working-directory: docs
      - name: Update version lists
        run: |
          NL=$'\n'
          sed -e "s/<tbody>/<tbody>\\${NL}        {{< changelog-table-row version=\"${{ env.PULUMI_VERSION}}\" date=\"$(date +%Y-%m-%d)\" showChecksum=\"true\" >}}/" -i ./content/docs/get-started/install/versions.md
        working-directory: docs
      - name: git status
        run: git status && git diff
        working-directory: docs
      - name: commit changes
        run: |
          git config --local user.email "bot@pulumi.com"
          git config --local user.name "pulumi-bot"
          git checkout -b pulumi/${{ github.run_id }}-${{ github.run_number }}
          git add static/
          git add content/
          git commit -m "Regenerating docs for Pulumi@${{ env.PULUMI_VERSION}}"
          git push origin pulumi/${{ github.run_id }}-${{ github.run_number }}
        working-directory: docs
      - name: pull-request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "pulumi/${{ github.run_id }}-${{ github.run_number }}"
          destination_branch: "master"
          pr_title: "Regen docs pulumi@${{ env.PULUMI_VERSION }}"
          pr_body: ""
          pr_label: "automation/pulumi-cli-docs,automation/merge"
          github_token: ${{ secrets.PULUMI_BOT_TOKEN }}
    strategy:
      matrix:
        dotnetversion:
          - 3.1.301
        goversion:
          - 1.15.x
        pythonversion:
          - "3.7"
